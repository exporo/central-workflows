name: CI + CD

on:
  workflow_call:
    inputs:
      NODE_VERSION:
        type: string
        required: false
        default: 14
      MAIN_BRANCH:
        type: string
        required: false
        default: main
      AWS_DEFAULT_REGION:
        type: string
        required: false
        default: eu-central-1
      DISABLE_STAGE:
        type: boolean
        required: false
        default: false
      DEFAULT_FRAMEWORK:
        type: string
        required: false
        default: cdk
      USE_SONARCLOUD:
        type: boolean
        required: false
        default: false
      SLS_SUBFOLDER:
        type: string
        required: false
        default: './'
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      GITHUB_TOKEN_VALUE:
        required: false
      SONAR_TOKEN:
        required: false
      NPM_AUTH_TOKEN:
        required: false
      SSH_PRIVATE_KEY:
        required: false  

jobs:
  Build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.NODE_VERSION }}
      - name: Setup access to Exporo NPM
        run: |
          echo "@exporo:registry=https://npm.pkg.github.com/" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" >> ~/.npmrc

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
      
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Switch Folder if required
        if: inputs.SLS_SUBFOLDER != './'
        run: cd ${{ inputs.SLS_SUBFOLDER }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      - run: npm run build --if-present
      - run: npm test

  Sonarcloud:
    name: Run Sonarcloud
    if: inputs.USE_SONARCLOUD
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.NODE_VERSION }}
          
      - name: Setup access to Exporo NPM
        run: |
          echo "@exporo:registry=https://npm.pkg.github.com/" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" >> ~/.npmrc
          
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Switch Folder if required
        if: inputs.SLS_SUBFOLDER != './'
        run: cd ${{ inputs.SLS_SUBFOLDER }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Scan Test Coverage
        run: npm run test-coverage --no-warnings

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_VALUE }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  DeployDev:
    name: Deploy to Dev
    if: github.event_name == 'pull_request'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Development
    steps:
      - name: aws-ssm-to-env
        uses: bomb-on/aws-ssm-to-env@master
        env:
          AWS_REGION: ${{ inputs.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          ssm_parameter_list: 'infrastructure_environment'
          simple_json: true
      - name: checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_DEFAULT_REGION }}
      - name: Switch Folder if required
        if: inputs.SLS_SUBFOLDER != './'
        run: cd ${{ inputs.SLS_SUBFOLDER }}
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.NODE_VERSION }}
      - name: Setup access to Exporo NPM
        run: |
          echo "@exporo:registry=https://npm.pkg.github.com/" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" >> ~/.npmrc

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
      
      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - name: Bootstrap stack
        if: inputs.DEFAULT_FRAMEWORK == 'cdk'
        run: STAGE=dev npx cdk bootstrap aws://${{secrets.AWS_ACCOUNT_ID}}/${{inputs.AWS_DEFAULT_REGION}}
      - name: Deploy CDK stack
        if: inputs.DEFAULT_FRAMEWORK == 'cdk'
        run: STAGE=dev npx cdk deploy -vv --require-approval never --all
      - name: Deploy Serverless stack
        if: inputs.DEFAULT_FRAMEWORK == 'serverless'
        run: STAGE=dev npx serverless deploy --region=${{ inputs.AWS_DEFAULT_REGION }}

  DeployStage:
    name: Deploy to Stage
    if: ${{ contains(github.event.ref, inputs.MAIN_BRANCH) }}
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Stage
    steps:
      - name: aws-ssm-to-env
        if: ${{ !inputs.DISABLE_STAGE }}
        uses: bomb-on/aws-ssm-to-env@master
        env:
          AWS_REGION: ${{ inputs.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          ssm_parameter_list: 'infrastructure_environment'
          simple_json: true
      - name: checkout
        if: ${{ !inputs.DISABLE_STAGE }}
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        if: ${{ !inputs.DISABLE_STAGE }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_DEFAULT_REGION }}
      - name: Switch Folder if required
        if: inputs.SLS_SUBFOLDER != './'
        run: cd ${{ inputs.SLS_SUBFOLDER }}
      - name: Setup Node.js
        if: ${{ !inputs.DISABLE_STAGE }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.NODE_VERSION }}
      - name: Setup access to Exporo NPM
        run: |
          echo "@exporo:registry=https://npm.pkg.github.com/" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" >> ~/.npmrc
      - name: Install dependencies
        if: ${{ !inputs.DISABLE_STAGE }}
        run: npm ci
      - name: Build
        if: ${{ !inputs.DISABLE_STAGE }}
        run: npm run build --if-present
      - name: Bootstrap stack
        if: ${{ inputs.DEFAULT_FRAMEWORK == 'cdk' && !inputs.DISABLE_STAGE }}
        run: STAGE=stage npx cdk bootstrap aws://${{secrets.AWS_ACCOUNT_ID}}/${{inputs.AWS_DEFAULT_REGION}}
      - name: Deploy CDK stack
        if: ${{ inputs.DEFAULT_FRAMEWORK == 'cdk' && !inputs.DISABLE_STAGE }}
        run: STAGE=stage npx cdk deploy -vv --require-approval never --all
      - name: Deploy Serverless stack
        if: ${{inputs.DEFAULT_FRAMEWORK == 'serverless' && !inputs.DISABLE_STAGE }}
        run: STAGE=stage npx serverless deploy --region=${{ inputs.AWS_DEFAULT_REGION }}
      - name: Check if Deploy stage is needed
        if: ${{ inputs.DISABLE_STAGE }}
        run: exit 0

  DeployProd:
    name: Deploy to Production
    needs: [DeployStage]
    runs-on: ubuntu-latest
    environment:
      name: Production
    steps:
      - name: aws-ssm-to-env
        uses: bomb-on/aws-ssm-to-env@master
        env:
          AWS_REGION: ${{ inputs.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          ssm_parameter_list: 'infrastructure_environment'
          simple_json: true
      - name: checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_DEFAULT_REGION }}
      - name: Switch Folder if required
        if: inputs.SLS_SUBFOLDER != './'
        run: cd ${{ inputs.SLS_SUBFOLDER }}
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.NODE_VERSION }}
      - name: Setup access to Exporo NPM
        run: |
          echo "@exporo:registry=https://npm.pkg.github.com/" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" >> ~/.npmrc
      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - name: Bootstrap stack
        if: inputs.DEFAULT_FRAMEWORK == 'cdk'
        run: STAGE=prod npx cdk bootstrap aws://${{secrets.AWS_ACCOUNT_ID}}/${{inputs.AWS_DEFAULT_REGION}}
      - name: Deploy CDK stack
        if: inputs.DEFAULT_FRAMEWORK == 'cdk'
        run: STAGE=prod npx cdk deploy -vv --require-approval never --all
      - name: Deploy Serverless stack
        if: inputs.DEFAULT_FRAMEWORK == 'serverless'
        run: STAGE=prod npx serverless deploy --region=${{ inputs.AWS_DEFAULT_REGION }}
