name: CI + CD

on:
  workflow_call:
    inputs:
      NODE_VERSION:
        type: string
        required: false
        default: 14
      MAIN_BRANCH:
        type: string
        required: false
        default: main
      AWS_DEFAULT_REGION:
        type: string
        required: false
        default: eu-central-1
      DEFAULT_FRAMEWORK:
        type: string
        required: false
        default: cdk
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCOUNT_ID:
        required: true

jobs:
  Build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.NODE_VERSION }}
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      - run: npm run build --if-present
      - run: npm test

  DeployDev:
    name: Deploy to Dev
    if: github.event_name == 'pull_request'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Development
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_DEFAULT_REGION }}
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - name: Bootstrap stack
        if: inputs.DEFAULT_FRAMEWORK == 'cdk'
        run: npx cdk bootstrap aws://${{secrets.AWS_ACCOUNT_ID}}/${{inputs.AWS_DEFAULT_REGION}}
      - name: Deploy CDK stack
        if: inputs.DEFAULT_FRAMEWORK == 'cdk'
        run: STAGE=dev npx cdk deploy -vv --require-approval never --all
      - name: Deploy Serverless stack
        if: inputs.DEFAULT_FRAMEWORK == 'serverless'
        run: STAGE=dev npx serverless deploy --region=${{ inputs.AWS_DEFAULT_REGION }}

  DeployStage:
    name: Deploy to Stage
    if: ${{ contains(github.event.ref, inputs.MAIN_BRANCH) }}
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Stage
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_DEFAULT_REGION }}
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - name: Bootstrap stack
        if: inputs.DEFAULT_FRAMEWORK == 'cdk'
        run: npx cdk bootstrap aws://${{secrets.AWS_ACCOUNT_ID}}/${{inputs.AWS_DEFAULT_REGION}}
      - name: Deploy CDK stack
        if: inputs.DEFAULT_FRAMEWORK == 'cdk'
        run: STAGE=stage npx cdk deploy -vv --require-approval never --all
      - name: Deploy Serverless stack
        if: inputs.DEFAULT_FRAMEWORK == 'serverless'
        run: STAGE=stage npx serverless deploy --region=${{ inputs.AWS_DEFAULT_REGION }}

  DeployProd:
    name: Deploy to Production
    needs: [DeployStage]
    runs-on: ubuntu-latest
    environment:
      name: Production
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_DEFAULT_REGION }}
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - name: Bootstrap stack
        if: inputs.DEFAULT_FRAMEWORK == 'cdk'
        run: npx cdk bootstrap aws://${{secrets.AWS_ACCOUNT_ID}}/${{inputs.AWS_DEFAULT_REGION}}
      - name: Deploy CDK stack
        if: inputs.DEFAULT_FRAMEWORK == 'cdk'
        run: STAGE=prod npx cdk deploy -vv --require-approval never --all
      - name: Deploy Serverless stack
        if: inputs.DEFAULT_FRAMEWORK == 'serverless'
        run: STAGE=prod npx serverless deploy --region=${{ inputs.AWS_DEFAULT_REGION }}
