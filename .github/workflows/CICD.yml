name: CI + CD

on:
  workflow_call:
    inputs:
      MAIN_BRANCH:
        type: string
        required: false
        default: main
      AWS_DEFAULT_REGION:
        type: string
        required: false
        default: eu-central-1
    secrets:
      DEV_AWS_ACCESS_KEY_ID:
        required: true
      DEV_AWS_SECRET_ACCESS_KEY:
        required: true
      STAGE_AWS_ACCESS_KEY_ID:
        required: true
      STAGE_AWS_SECRET_ACCESS_KEY:
        required: true
      PROD_AWS_ACCESS_KEY_ID:
        required: true
      PROD_AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      - run: npm run build --if-present
      - run: npm test

  DeployDev:
    name: Deploy to Dev
    if: github.event_name == 'pull_request'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Development
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_DEFAULT_REGION }}
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - name: Synth stack
        run: npx cdk synth
      - name: Deploy stack
        run: npx cdk deploy --require-approval never

  DeployStage:
    name: Deploy to Stage
    if: github.event.ref == 'refs/heads/${{ inputs.MAIN_BRANCH }}'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Stage
    steps:
      - name: Deploy
        run: echo I am deploying!

  DeployProd:
    name: Deploy to Production
    needs: [DeployStage]
    runs-on: ubuntu-latest
    environment:
      name: Production
    steps:
      - name: Deploy
        run: echo I am deploying!
